ARG INSTALL_ODOO_VERSION=${INSTALL_ODOO_VERSION:17}

# or odoo:17.0
# FROM odoo:${INSTALL_ODOO_VERSION}
FROM docker.io/bitnami/odoo:${INSTALL_ODOO_VERSION}

# Use Docker BuildKit for better caching and faster builds
ARG DOCKER_BUILDKIT=1
ARG BUILDKIT_INLINE_CACHE=1
# Enable BuildKit for Docker-Compose
ARG COMPOSE_DOCKER_CLI_BUILD=1

WORKDIR /workspace

RUN apt update && apt install -y wget netcat iputils-ping nano dos2unix && \
    # Install Poetry
    # curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python - && \
    curl -sSL https://install.python-poetry.org | POETRY_HOME=/opt/poetry python && \
    cd /usr/local/bin && \
    ln -s /opt/poetry/bin/poetry && \
    poetry config virtualenvs.create false && \
    # Clean up
    apt-get autoremove -y && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

# Install NodeJS, yarn, NPM, and Poetry with the root user
ENV POETRY_HOME=/usr/local

# COPY poetry.lock pyproject.toml ./
# RUN \
#     # in-project .venv makes it very slow since it's sharing files with Windows/WSL...
#     # poetry config virtualenvs.in-project true
#     # These settings get put into the ~/.config./pyconfig/config.toml file
#     poetry config virtualenvs.create false && \
#     poetry config repositories.ijack_private https://pypi.myijack.com && \
#     # The following username/password setup doesn't seem to work for some reason...
#     # poetry config http-basic.ijack_private $PYPI_USERNAME_PRIVATE $PYPI_PASSWORD_PRIVATE
#     echo "Running poetry install..." && \
#     # poetry add --dev gateway-setup
#     # echo ""
#     poetry install --no-interaction --no-ansi

# Copy my preferred .bashrc to /root/ so that it's automatically "sourced" when the container starts
COPY .bashrc /root/

# Install wkhtmltopdf
# https://gist.github.com/srmds/2507aa3bcdb464085413c650fe42e31d
# There's no sudo on this Ubuntu 22.04 image, so we need to use root
# USER root
# On Ubuntu 22.04 (Jammy, on which Odoo 17 is built), to install the latest wkhtmltopdf v0.12.6, just one line:
# RUN apt-get update && apt-get -y install wkhtmltopdf

# Another possible way to install wkhtmltopdf v0.12.5
# RUN wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb && \
#     apt install ./wkhtmltox_0.12.5-1.bionic_amd64.deb -y

# RUN apt-get update && \
#     wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb && \
#     dpkg -i libssl1.1_1.1.0g-2ubuntu4_amd64.deb && \
#     # apt-get -y install wkhtmltopdf
#     wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb && \
#     dpkg -i wkhtmltox_0.12.5-1.bionic_amd64.deb && \
#     apt install -f
#     # apt-get install -y software-properties-common && \
#     # apt-add-repository -y "deb http://security.ubuntu.com/ubuntu bionic-security main" && \
#     # apt-get -yq update && \
#     # apt-get install -y libxrender1 libfontconfig1 libx11-dev libjpeg62 libxtst6 \
#     #                         fontconfig xfonts-75dpi xfonts-base libpng12-0 && \
#     # wget "https://downloads.wkhtmltopdf.org/0.12/0.12.5/wkhtmltox_0.12.5-1.bionic_amd64.deb" && \
#     # dpkg -i wkhtmltox_0.12.5-1.bionic_amd64.deb && \
#     # apt-get -f -y install

# # Overwrite the default Odoo startup script so we can do additional things, or just sleep forever
# COPY entrypoint.sh /entrypoint.sh
# RUN chmod +x /entrypoint.sh
# # Set the default entry point to the startup script
# ENTRYPOINT ["/entrypoint.sh"]
# # CMD ["odoo"]
# # CMD ["sh", "-c", "tail -f /dev/null"]

# COPY --chown=odoo:root ./addons /opt/bitnami/odoo/addons
# COPY --chown=odoo:root ./addons /bitnami/odoo/addons

# Switch back to the Odoo user
# USER odoo